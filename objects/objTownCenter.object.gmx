<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCapital</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objBuilding</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
faith = 0
fear = 0
fertility = 0

building_range = 150
buildings = 1

gen = 0
depth = -y;
border = 400;
popCap = 200;
basePersonLife = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>total_faith = 0
total_fear = 0
total_fertility = 0
persons = 0



with(objPerson) { //this may need to be optimized for 500+ people
    if distance_to_object(other) &lt; other.border {
        other.persons ++
        other.total_faith += faith    
        other.total_fear += fear
        other.total_fertility += fertility
    }
}

if persons &gt; 0 {
    faith = total_faith/persons
    fear = total_fear/persons
    fertility = total_fertility/persons
    if persons &gt; buildings*20 &amp;&amp; buildings &lt; 7 {
        buildings += 1
        switch(irandom(2)) {
            case 0:
            obj = objSmallBuilding
            break
            case 1:
            obj = objMidBuilding
            break
            case 2:
            obj = objLargeBuilding
            break
        }
        var px, py;
        px = x + lengthdir_x(100+irandom(building_range),irandom(360))
        py = y + lengthdir_y(100+irandom(building_range),irandom(360))
        var nearestBuilding = instance_nearest(px,py,objBuilding)
        while(point_distance(px,py,nearestBuilding.x,nearestBuilding.y)&lt;75){
            px = x + lengthdir_x(100+irandom(building_range),irandom(360))
            py = y + lengthdir_y(100+irandom(building_range),irandom(360))
            nearestBuilding = instance_nearest(px,py,objBuilding)
        }
        construct_building(px,py,obj);
    }
    if persons &gt; buildings*22 &amp;&amp; buildings &gt;6 &amp;&amp; instance_number(objTownCenter)&lt;5 &amp;&amp; instance_number(objNewTown)&gt;0 &amp;&amp; alarm[0]==-1{
        var newTown = instance_nearest(x,y,objNewTown);//instance_find(objNewTown,irandom(instance_number(objNewTown)-1));
        repeat(5+irandom(5)){
            var migrant; migrant = instance_find(objPerson,irandom(instance_number(objPerson)-1)); //this has potential of picking the same person multiple times...
            migrant.drawMigrant = true;
            migrant.lifespan = 6000;
            if(instance_exists(migrant)){
                migrant.tx = newTown.x;
                migrant.ty = newTown.y;
            }
        }
        alarm[0] = room_speed*60*5;//new town won't be created for another 5 minutes
        newTown.activate = true;
        //instance_find(objPerson,0);
    }
    
} else {
    faith = 0
    fear = 0
    fertility = 0
    gen = -1
}

gen += ln(total_fertility) * (1 + ln(total_fertility))

if gen &gt; 100 &amp;&amp; persons &lt; popCap &amp;&amp; persons&gt;1{ //it takes 2 people to continue population growth
    if(instance_exists(objPlayer)){
        p = instance_create(x,y+16,objPerson)
        p.faith = faith-irandom(10)+irandom(10)
        p.fear = fear-irandom(10)+irandom(10)
        p.lifespan += buildings * basePersonLife;
        gen = 0
    }
}

color = make_colour_hsv(faith*10,127,127)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_ext(sprite_index,-1,x,y,1,1,0,color,1)
draw_sprite_ext(sprite_index,-1,x,y,1,1,0,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
